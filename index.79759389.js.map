{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,S,E,SCIqB,SAAS,aAAA,CAAc,iBAE5B,SAAS,aAAA,CAAc","sources":["<anon>","src/js/movieSearch.js","src/js/state.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire3143\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire3143\"] = parcelRequire;\n}\nparcelRequire(\"lXnOV\");\nconst $22e66aafcfe0d715$export$ca000e230c0caa3e = {\n    currentPage: 1,\n    totalPages: 0,\n    activeFilm: null,\n    query: null,\n    whatPaginated: null,\n    whatchedOrQueue: null\n};\n\n\nparcelRequire(\"7IoHk\");\nconst $5adbbb37fa4ab8a6$var$searchFormEl = document.querySelector(\".header__form\");\n// console.log(searchFormEl);\nconst $5adbbb37fa4ab8a6$var$inputEl = document.querySelector(\".header__form__input\"); // console.log(inputEl);\n //const moviesEl = document.querySelector('tutaj_klasa_galerii')\n //przeniosłem kod wyszukiwania do pliku pagination.js\n // searchFormEl.addEventListener('submit', e => {\n //   e.preventDefault();\n //   if (!inputEl.value.trim())\n //     return Notiflix.Notify.failure('P2lease enter a search query for the movie');\n //   console.log(`user triggered search movie with value {${inputEl.value.trim()}}`);\n //   state.whatPaginated = 'search';\n //   // tutaj wypadaloby resetowac paginacje ktora byla np. z poprzedniego wyszukiwania\n //   state.query = inputEl.value.trim();\n //   //moviesEl.innerHTML = ''; <- uncomm, jak bedzie galeria i bedzie gdzie wyswietlic wynik searcha\n //   fetchMoviesByQuery(state.query, state.currentPage)\n //     .then(res => {\n //       const { results, total_pages } = res;\n //       state.totalPages = total_pages;\n //       if (state.totalPages > 1) {\n //         //tutaj paginacja... -> renderowanie kodu do paginacji( numerki stron itp)\n //         Notiflix.Notify.success('Hooray! We found something interesting for you!');\n //       } else {\n //         Notiflix.Notify.failure(\"We couldn't find anything related to Your search\");\n //       }\n //       inputEl.value = '';\n //       //return wyrenderujGalerie(results); tutaj wypadaloby dodac funkcje renderowania galerii ktora bedzie przyjmowac results\n //     })\n //     .then(res => {\n //       //moviesEl.insertAdjacentHTML('beforeend', res);\n //     });\n // });\n\n\n//# sourceMappingURL=index.79759389.js.map\n","import { fetchMoviesByQuery } from './api';\nimport { state } from './state';\nimport Notiflix from 'notiflix';\n\nconst searchFormEl = document.querySelector('.header__form');\n// console.log(searchFormEl);\nconst inputEl = document.querySelector('.header__form__input');\n// console.log(inputEl);\n//const moviesEl = document.querySelector('tutaj_klasa_galerii')\n\n//przeniosłem kod wyszukiwania do pliku pagination.js\n\n// searchFormEl.addEventListener('submit', e => {\n//   e.preventDefault();\n//   if (!inputEl.value.trim())\n//     return Notiflix.Notify.failure('P2lease enter a search query for the movie');\n\n//   console.log(`user triggered search movie with value {${inputEl.value.trim()}}`);\n//   state.whatPaginated = 'search';\n//   // tutaj wypadaloby resetowac paginacje ktora byla np. z poprzedniego wyszukiwania\n//   state.query = inputEl.value.trim();\n//   //moviesEl.innerHTML = ''; <- uncomm, jak bedzie galeria i bedzie gdzie wyswietlic wynik searcha\n//   fetchMoviesByQuery(state.query, state.currentPage)\n//     .then(res => {\n//       const { results, total_pages } = res;\n//       state.totalPages = total_pages;\n\n//       if (state.totalPages > 1) {\n//         //tutaj paginacja... -> renderowanie kodu do paginacji( numerki stron itp)\n\n//         Notiflix.Notify.success('Hooray! We found something interesting for you!');\n//       } else {\n//         Notiflix.Notify.failure(\"We couldn't find anything related to Your search\");\n//       }\n\n//       inputEl.value = '';\n\n//       //return wyrenderujGalerie(results); tutaj wypadaloby dodac funkcje renderowania galerii ktora bedzie przyjmowac results\n//     })\n//     .then(res => {\n//       //moviesEl.insertAdjacentHTML('beforeend', res);\n//     });\n// });\n","export const state = {\n  currentPage: 1,\n  totalPages: 0,\n  activeFilm: null,\n  query: null,\n  whatPaginated: null,\n  whatchedOrQueue: null,\n};\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","document","querySelector"],"version":3,"file":"index.79759389.js.map"}